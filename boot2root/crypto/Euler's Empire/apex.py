#!/usr/bin/env python3
# https://github.com/pberba/ctf-solutions/blob/master/20190810-crytoctf/crypto-122-time-capsule/time-capsule-solution.ipynb
n = 126176329335043454027341235009057683290541781096785538088437185779950106283534462102786883
t = 1138895128842708275167
z = 22456023784134158064387550786352078427103553489348641216173010466267938277785173301732037264951635050700506776189809535326121257316490294752439819127486709456258090566784874248887194200916292508316349668172694553726134727726937633467532396106605496205841004277926961591604901357597262377953003319850049478502819166543968493292912201066602832545685929727421332846592671475883986049409546411338070434784675992855275254782158499562211464363321053581615280674425860714715529804670567409115827118589244016504450514019111124308126165185658681843519312254372108072512792854040590016772780908271525769845284796145687079308339

c = 22456023784134158064387550786352078427103553489348641216173010466267938277785173301732037264951635050700506776189809535326121257316490294752439819127486709456258090566784874248887194200916292508316349668172694553726134727726937633467532396106605496205841004277926961591604901357597262377953003319850049478502819166543968493292912201066602832545685929727421332846592671475883986049409546411338070434784675992855275254782158499562211464363321053581615280674425860714715529804670567409115827118589244016504450514019111124308126165145471041974060620715112664770187765206877310029241277556084680387431469989638143534950344

"""
Note: pow(2, x, n) = pow(2, x % phi(n), n)
So,
l = pow(2, pow(2, t), n) = pow(2, pow(2, t, phi(n)), n)
"""

# Factorize N
n_facts = [611738359,648863389,775357619,806952673,834612803,848994661,856368371,914351299,940957051,973139887]

# Calculate phi = product of all (factor - 1) in n_facts
test = 1
phi = 1
for i in n_facts:
	test *= i
	phi *= (i-1)

assert test == n
assert pow(2, phi, n) == 1


e = pow(2, t, phi)
l = pow(2, e, n)
m = l ^ z ^ c

print(bytes.fromhex(hex(m)[2:]))